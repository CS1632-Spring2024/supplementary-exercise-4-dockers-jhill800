package edu.pitt.cs;
import static org.hamcrest.MatcherAssert.assertThat;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.chrome.*;


@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class D3Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    //driver = new ChromeDriver();
    
    ChromeOptions options = new ChromeOptions();
    options.addArguments("--headless");
    driver = new ChromeDriver(options);

    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tEST1LINKS() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Reset")).click();
    vars.put("url", js.executeScript("return window.location.href"));
    assertEquals(vars.get("url").toString(), "http://localhost:8080/reset");
  }
  @Test
  public void tEST2RESET() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=true'; document.cookie = '2=true'; document.cookie = '3=true';");
    driver.findElement(By.linkText("Reset")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//li[contains(.,\'ID 1. Jennyanydots\')]"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//li[contains(.,\'ID 2. Old Deuteronomy\')]"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//li[contains(.,\'ID 3. Mistoffelees\')]"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tEST3CATALOG() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Catalog")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//li[2]/img"));
      assert(elements.size() > 0);
    }
    {
      WebElement element = driver.findElement(By.xpath("//li[2]/img"));
      String attribute = element.getAttribute("src");
      vars.put("actual_src", attribute);
    }
    assertEquals(vars.get("actual_src").toString(), "http://localhost:8080/images/cat2.jpg");
  }
  @Test
  public void tEST4LISTING() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Catalog")).click();
    vars.put("item_count", driver.findElements(By.xpath("//div[@id=\'listing\']/ul/li")).size());
    assertEquals(vars.get("item_count").toString(), "3");
    vars.put("listing_text", driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[3]")).getText());
    assertEquals(vars.get("listing_text").toString(), "ID 3. Mistoffelees");
  }
  @Test
  public void tEST5RENTACAT() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[@onclick=\'rentSubmit()\']"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[@onclick=\'returnSubmit()\']"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tEST6RENT() {
    driver.get("http://localhost:8080/rent-a-cat");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    driver.findElement(By.id("rentID")).click();
    driver.findElement(By.id("rentID")).sendKeys("1");
    driver.findElement(By.xpath("//button[@onclick=\'rentSubmit()\']")).click();
    vars.put("text1", driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[1]")).getText());
    vars.put("text2", driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[2]")).getText());
    vars.put("text3", driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[3]")).getText());
    assertEquals(vars.get("text1").toString(), "Rented out");
    assertEquals(vars.get("text2").toString(), "ID 2. Old Deuteronomy");
    assertEquals(vars.get("text3").toString(), "ID 3. Mistoffelees");
    vars.put("rent_result", driver.findElement(By.xpath("//div[@id=\'rentResult\']")).getText());
    assertEquals(vars.get("rent_result").toString(), "Success!");
  }
  @Test
  public void tEST7RETURN() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=true'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    driver.findElement(By.id("returnID")).click();
    driver.findElement(By.id("returnID")).sendKeys("2");
    driver.findElement(By.xpath("//button[@onclick=\'returnSubmit()\']")).click();
    vars.put("return_result", driver.findElement(By.xpath("//div[@id=\'returnResult\']")).getText());
    assertEquals(vars.get("return_result").toString(), "Success!");
  }
  @Test
  public void tEST8FEEDACAT() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[@onclick=\'feedSubmit()\']"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tEST9FEED() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    driver.findElement(By.id("catnips")).click();
    driver.findElement(By.id("catnips")).sendKeys("6");
    driver.findElement(By.cssSelector(".btn")).click();
    vars.put("feed_result", driver.findElement(By.xpath("//div[@id=\'feedResult\']")).getText());
    assertEquals(vars.get("feed_result").toString(), "Nom, nom, nom.");
  }
  @Test
  public void tEST10GREETACAT() {
    driver.get("http://localhost:8080/");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    driver.findElement(By.linkText("Greet-A-Cat")).click();
    vars.put("greeting_text", driver.findElement(By.xpath("//div[@id=\'greeting\']/h4")).getText());
    assertEquals(vars.get("greeting_text").toString(), "Meow!Meow!Meow!");
  }
  @Test
  public void tEST11GREETACATWITHNAME() {
    driver.get("http://localhost:8080/greet-a-cat/Jennyanydots");
    js.executeScript("document.cookie = '1=false'; document.cookie = '2=false'; document.cookie = '3=false';");
    vars.put("greeting_text", driver.findElement(By.xpath("//div[@id=\'greeting\']/h4")).getText());
    assertEquals(vars.get("greeting_text").toString(), "Meow! from Jennyanydots.");
  }
}
